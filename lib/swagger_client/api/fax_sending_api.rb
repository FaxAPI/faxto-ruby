=begin
#Fax.to REST API client for Ruby

#This is Fax.to REST API client for Ruby.

OpenAPI spec version: 2.0.0
Contact: inquiries@fax.to
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.0-SNAPSHOT

=end

require 'uri'

module SwaggerClient
  class FaxSendingApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # This API is for computing the cost of the fax to be sent
    # @param document_id The id of the document to be sent
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :fax_number The fax number of the recipient
    # @return [InlineResponse2001]
    def fax_document_id_costs_get(document_id, api_key, opts = {})
      data, _status_code, _headers = fax_document_id_costs_get_with_http_info(document_id, api_key, opts)
      data
    end

    # This API is for computing the cost of the fax to be sent
    # @param document_id The id of the document to be sent
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :fax_number The fax number of the recipient
    # @return [Array<(InlineResponse2001, Fixnum, Hash)>] InlineResponse2001 data, response status code and response headers
    def fax_document_id_costs_get_with_http_info(document_id, api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FaxSendingApi.fax_document_id_costs_get ...'
      end
      # verify the required parameter 'document_id' is set
      if @api_client.config.client_side_validation && document_id.nil?
        fail ArgumentError, "Missing the required parameter 'document_id' when calling FaxSendingApi.fax_document_id_costs_get"
      end
      # verify the required parameter 'api_key' is set
      if @api_client.config.client_side_validation && api_key.nil?
        fail ArgumentError, "Missing the required parameter 'api_key' when calling FaxSendingApi.fax_document_id_costs_get"
      end
      # resource path
      local_var_path = '/fax/{document_id}/costs'.sub('{' + 'document_id' + '}', document_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'fax_number'] = opts[:'fax_number'] if !opts[:'fax_number'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'application/xml'])
      header_params[:'api_key'] = api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2001')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FaxSendingApi#fax_document_id_costs_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API gets the history of a fax
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :limit The number of record to return
    # @option opts [String] :page The page you want to get
    # @return [InlineResponse2003]
    def fax_history_get(api_key, opts = {})
      data, _status_code, _headers = fax_history_get_with_http_info(api_key, opts)
      data
    end

    # This API gets the history of a fax
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :limit The number of record to return
    # @option opts [String] :page The page you want to get
    # @return [Array<(InlineResponse2003, Fixnum, Hash)>] InlineResponse2003 data, response status code and response headers
    def fax_history_get_with_http_info(api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FaxSendingApi.fax_history_get ...'
      end
      # verify the required parameter 'api_key' is set
      if @api_client.config.client_side_validation && api_key.nil?
        fail ArgumentError, "Missing the required parameter 'api_key' when calling FaxSendingApi.fax_history_get"
      end
      # resource path
      local_var_path = '/fax-history'

      # query parameters
      query_params = {}
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'application/xml'])
      header_params[:'api_key'] = api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2003')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FaxSendingApi#fax_history_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API gets the status of a fax
    # @param fax_job_id The id of the fax job
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse2002]
    def fax_job_id_status_get(fax_job_id, api_key, opts = {})
      data, _status_code, _headers = fax_job_id_status_get_with_http_info(fax_job_id, api_key, opts)
      data
    end

    # This API gets the status of a fax
    # @param fax_job_id The id of the fax job
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse2002, Fixnum, Hash)>] InlineResponse2002 data, response status code and response headers
    def fax_job_id_status_get_with_http_info(fax_job_id, api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FaxSendingApi.fax_job_id_status_get ...'
      end
      # verify the required parameter 'fax_job_id' is set
      if @api_client.config.client_side_validation && fax_job_id.nil?
        fail ArgumentError, "Missing the required parameter 'fax_job_id' when calling FaxSendingApi.fax_job_id_status_get"
      end
      # verify the required parameter 'api_key' is set
      if @api_client.config.client_side_validation && api_key.nil?
        fail ArgumentError, "Missing the required parameter 'api_key' when calling FaxSendingApi.fax_job_id_status_get"
      end
      # resource path
      local_var_path = '/fax/{fax_job_id}/status'.sub('{' + 'fax_job_id' + '}', fax_job_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'application/xml'])
      header_params[:'api_key'] = api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2002')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FaxSendingApi#fax_job_id_status_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is for sending a new fax in any fax numbers anywhere in the world
    # @param fax_number The fax number of the recipient
    # @param document_id The id of the document to be sent
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse200]
    def fax_post(fax_number, document_id, api_key, opts = {})
      data, _status_code, _headers = fax_post_with_http_info(fax_number, document_id, api_key, opts)
      data
    end

    # This API is for sending a new fax in any fax numbers anywhere in the world
    # @param fax_number The fax number of the recipient
    # @param document_id The id of the document to be sent
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse200, Fixnum, Hash)>] InlineResponse200 data, response status code and response headers
    def fax_post_with_http_info(fax_number, document_id, api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FaxSendingApi.fax_post ...'
      end
      # verify the required parameter 'fax_number' is set
      if @api_client.config.client_side_validation && fax_number.nil?
        fail ArgumentError, "Missing the required parameter 'fax_number' when calling FaxSendingApi.fax_post"
      end
      # verify the required parameter 'document_id' is set
      if @api_client.config.client_side_validation && document_id.nil?
        fail ArgumentError, "Missing the required parameter 'document_id' when calling FaxSendingApi.fax_post"
      end
      # verify the required parameter 'api_key' is set
      if @api_client.config.client_side_validation && api_key.nil?
        fail ArgumentError, "Missing the required parameter 'api_key' when calling FaxSendingApi.fax_post"
      end
      # resource path
      local_var_path = '/fax'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'application/xml'])
      header_params[:'api_key'] = api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(document_id)
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse200')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FaxSendingApi#fax_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API is used for cleaning a document
    # @param document_id The id of the document
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse2009]
    def file_clean_get(document_id, api_key, opts = {})
      data, _status_code, _headers = file_clean_get_with_http_info(document_id, api_key, opts)
      data
    end

    # This API is used for cleaning a document
    # @param document_id The id of the document
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse2009, Fixnum, Hash)>] InlineResponse2009 data, response status code and response headers
    def file_clean_get_with_http_info(document_id, api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FaxSendingApi.file_clean_get ...'
      end
      # verify the required parameter 'document_id' is set
      if @api_client.config.client_side_validation && document_id.nil?
        fail ArgumentError, "Missing the required parameter 'document_id' when calling FaxSendingApi.file_clean_get"
      end
      # verify the required parameter 'api_key' is set
      if @api_client.config.client_side_validation && api_key.nil?
        fail ArgumentError, "Missing the required parameter 'api_key' when calling FaxSendingApi.file_clean_get"
      end
      # resource path
      local_var_path = '/file-clean'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'application/xml'])
      header_params[:'document_id'] = document_id
      header_params[:'api_key'] = api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2009')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FaxSendingApi#file_clean_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API generates a preview of a document
    # @param document_id The id of the document
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse20010]
    def file_generate_preview_get(document_id, api_key, opts = {})
      data, _status_code, _headers = file_generate_preview_get_with_http_info(document_id, api_key, opts)
      data
    end

    # This API generates a preview of a document
    # @param document_id The id of the document
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse20010, Fixnum, Hash)>] InlineResponse20010 data, response status code and response headers
    def file_generate_preview_get_with_http_info(document_id, api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FaxSendingApi.file_generate_preview_get ...'
      end
      # verify the required parameter 'document_id' is set
      if @api_client.config.client_side_validation && document_id.nil?
        fail ArgumentError, "Missing the required parameter 'document_id' when calling FaxSendingApi.file_generate_preview_get"
      end
      # verify the required parameter 'api_key' is set
      if @api_client.config.client_side_validation && api_key.nil?
        fail ArgumentError, "Missing the required parameter 'api_key' when calling FaxSendingApi.file_generate_preview_get"
      end
      # resource path
      local_var_path = '/file-generate-preview'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'application/xml'])
      header_params[:'document_id'] = document_id
      header_params[:'api_key'] = api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20010')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FaxSendingApi#file_generate_preview_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API deletes a document
    # @param document_id The id of the document
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse20011]
    def files_document_id_delete(document_id, api_key, opts = {})
      data, _status_code, _headers = files_document_id_delete_with_http_info(document_id, api_key, opts)
      data
    end

    # This API deletes a document
    # @param document_id The id of the document
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse20011, Fixnum, Hash)>] InlineResponse20011 data, response status code and response headers
    def files_document_id_delete_with_http_info(document_id, api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FaxSendingApi.files_document_id_delete ...'
      end
      # verify the required parameter 'document_id' is set
      if @api_client.config.client_side_validation && document_id.nil?
        fail ArgumentError, "Missing the required parameter 'document_id' when calling FaxSendingApi.files_document_id_delete"
      end
      # verify the required parameter 'api_key' is set
      if @api_client.config.client_side_validation && api_key.nil?
        fail ArgumentError, "Missing the required parameter 'api_key' when calling FaxSendingApi.files_document_id_delete"
      end
      # resource path
      local_var_path = '/files/{document_id}'.sub('{' + 'document_id' + '}', document_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'application/xml'])
      header_params[:'api_key'] = api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse20011')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FaxSendingApi#files_document_id_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # This API gets all the files of a certain user
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :limit The number of record to return
    # @option opts [String] :page The page you want to get
    # @return [InlineResponse2008]
    def files_get(api_key, opts = {})
      data, _status_code, _headers = files_get_with_http_info(api_key, opts)
      data
    end

    # This API gets all the files of a certain user
    # @param api_key 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :limit The number of record to return
    # @option opts [String] :page The page you want to get
    # @return [Array<(InlineResponse2008, Fixnum, Hash)>] InlineResponse2008 data, response status code and response headers
    def files_get_with_http_info(api_key, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FaxSendingApi.files_get ...'
      end
      # verify the required parameter 'api_key' is set
      if @api_client.config.client_side_validation && api_key.nil?
        fail ArgumentError, "Missing the required parameter 'api_key' when calling FaxSendingApi.files_get"
      end
      # resource path
      local_var_path = '/files'

      # query parameters
      query_params = {}
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json', 'application/xml'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'application/xml'])
      header_params[:'api_key'] = api_key

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2008')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FaxSendingApi#files_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
